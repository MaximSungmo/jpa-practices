import org.gradle.api.tasks.compile.JavaCompile

plugins {
    id 'java'
}

group 'me.kickscar.practices.jpa'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web:2.1.8.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-data-jpa:2.1.8.RELEASE')
    compile('org.hibernate:hibernate-entitymanager:5.4.4.Final')
    compile('mysql:mysql-connector-java:8.0.16')
    runtimeOnly('com.h2database:h2:1.4.197')
    testCompile('junit:junit:4.12')
    testCompile('org.springframework.boot:spring-boot-starter-test:2.1.8.RELEASE')

    compile('com.querydsl:querydsl-jpa:4.2.1')
    compile('com.mysema.querydsl:querydsl-apt:3.7.4')

    annotationProcessor(
            'com.querydsl:querydsl-apt:4.2.1:jpa',
            'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final',
            'javax.annotation:javax.annotation-api:1.3.2'
    )
}

/* QueryDSL PlugIn Configuration */

def querydslGenDirectory = 'src/main/generated'

sourceSets {
    main.java.srcDirs += [ querydslGenDirectory ]
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslGenDirectory)
}

clean.doLast {
    file(querydslGenDirectory).deleteDir()
}